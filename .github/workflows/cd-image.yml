name: Publish images to Ecr

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write # Required for OIDC
  contents: read  # Required for checkout

jobs:
  # This job runs twice, once for amd64 and once for arm64, on native runners.
  build-and-push-arch:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runner: ubuntu-latest
          - arch: arm64
            platform: linux/arm64
            runner: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::054037142884:role/nilauth-github"
          aws-region: "us-east-1"

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          # Tag with a temporary, arch-specific suffix (e.g., c4a3a2d-amd64) for internal use in the next job.
          tags: public.ecr.aws/k5d9x2g2/nilauth:${{ github.sha }}-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  create-and-push-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push-arch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::054037142884:role/nilauth-github"
          aws-region: "us-east-1"

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Extract Docker metadata for user-facing tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: public.ecr.aws/k5d9x2g2/nilauth
          tags: |
            # Creates 'latest' tag for pushes to main
            type=raw,value=latest,enable={{is_default_branch}}
            # Creates version tag from git tag (e.g., v1.2.3 -> 1.2.3)
            type=semver,pattern={{version}}
            # Creates tag from commit SHA
            type=sha,prefix=

      - name: Create and push multi-arch manifest
        run: |
          # Loop through each user-facing tag (e.g., 'latest', '1.0.0', 'c4a3a2d')
          for tag in ${{ steps.meta.outputs.tags }}; do
            echo "Creating and pushing manifest for tag: $tag"
          
            # Use 'docker manifest' to create a manifest list that points to the
            # two architecture-specific images built in the previous job.
            docker manifest create "$tag" \
              public.ecr.aws/k5d9x2g2/nilauth:${{ github.sha }}-amd64 \
              public.ecr.aws/k5d9x2g2/nilauth:${{ github.sha }}-arm64
          
            # Push the final manifest list to the registry.
            docker manifest push "$tag"
          done
